version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ullrai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ullrai_starter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - ullrai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Application
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ullrai-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ullrai_starter
      
      # Database connection pool settings
      DB_POOL_SIZE: 20
      DB_IDLE_TIMEOUT: 300
      DB_MAX_LIFETIME: 14400
      DB_CONNECT_TIMEOUT: 30
      
      # Application URL
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      
      # Auth Secret (generate a new one for production)
      BETTER_AUTH_SECRET: your-development-secret-key-here
      
      # OAuth (optional - configure as needed)
      # GOOGLE_CLIENT_ID: 
      # GOOGLE_CLIENT_SECRET: 
      # GITHUB_CLIENT_ID: 
      # GITHUB_CLIENT_SECRET: 
      # LINKEDIN_CLIENT_ID: 
      # LINKEDIN_CLIENT_SECRET: 
      
      # Email service (configure with your Resend API key)
      RESEND_API_KEY: your-resend-api-key-here
      
      # Cloudflare R2 Storage (configure with your credentials)
      R2_ENDPOINT: your-r2-endpoint
      R2_ACCESS_KEY_ID: your-r2-access-key
      R2_SECRET_ACCESS_KEY: your-r2-secret-key
      R2_BUCKET_NAME: your-bucket-name
      R2_PUBLIC_URL: your-r2-public-url
      
      # Payment provider (configure with your Creem credentials)
      CREEM_API_KEY: your-creem-api-key
      CREEM_ENVIRONMENT: test_mode
      CREEM_WEBHOOK_SECRET: your-creem-webhook-secret
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ullrai-network
    volumes:
      - ../src:/app/src:ro
      - ../public:/app/public:ro

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: ullrai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ullrai-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ullrai-network:
    driver: bridge